# Generated by Django 5.0.2 on 2025-03-27 04:21

from django.db import migrations
from django.contrib.auth.models import Group, Permission

def create_groups(apps, schema_editor):
    # Crear los grupos
    group_names = ['ciudadano', 'administrador']
    for group_name in group_names:
        group, created = Group.objects.get_or_create(name=group_name)

        # Si el grupo es "administrador", asignamos permisos de administrador
        if group_name == 'administrador':
            permissions = Permission.objects.all()  # Asigna todos los permisos
            group.permissions.set(permissions)

        # Asignar permisos básicos para "ciudadano"
        elif group_name == 'ciudadano':
            permissions = Permission.objects.filter(codename__in=['view_propuesta', 
            'add_propuesta', 'add_version', 'add_version', 'view_version', 'add_comentario', 'view_comentario'])  # Cambia según lo que necesitas
            group.permissions.set(permissions)

def reverse_create_groups(apps, schema_editor):
    # Eliminar los grupos en caso de deshacer la migración
    Group.objects.filter(name__in=['ciudadano', 'administrador']).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),  # Reemplaza con la última migración de auth
    ]

    operations = [
        migrations.RunPython(create_groups, reverse_code=reverse_create_groups),
    ]